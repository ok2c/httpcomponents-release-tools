/*
 * ====================================================================
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import com.github.ok2.hc.release.HCWebsitePlugin
import com.github.ok2.hc.release.Line

apply plugin: HCWebsitePlugin

/////////////////////////// Copy specs ////////////////////////////////////////

CopySpec siteContent(File dir) {
    copySpec {
        from ("${dir}/target/site") {
            exclude '**/*.html'
        }
        from ("${dir}/target/site") {
            include '**/*.html'
            filter(Line.filter())
        }
    }
}

task copyReleaseWebContent {
    group = 'Website'
    description = "Generate release web content."
    doLast {
        def hcPom = releaseTool.parsePom()
        def productName = releaseTool.getProductName(hcPom.artifactId)
        def packageName = releaseTool.getPackageName(hcPom.artifactId)
        def releaseSeries = "${packageName}-${hcPom.major}.${hcPom.minor}.x"
        def releaseDir = releaseTool.dir
        def stagingDir = websiteTool.stagingDir
        def releaseStagingDir = file("${stagingDir}/${releaseSeries}")
        println "Copying content of ${productName} ${hcPom.version} release to ${releaseStagingDir}"
        copy {
            into "${releaseStagingDir}"
            with siteContent(releaseDir)
        }
        hcPom.modules.each { submodule ->
            copy {
                into "${releaseStagingDir}/${submodule.name}"
                with siteContent(file("${releaseDir}/${submodule.name}"))
            }
        }
        websiteTool.fixLinks(hcPom, releaseStagingDir)
        websiteTool.rewriteSiteCss(hcPom, releaseStagingDir)
    }
}

task copyProjectWebContent {
    group = 'Website'
    description = "Generate project web content."
    doLast {
        def websiteDir = websiteTool.websiteDir
        def stagingDir = websiteTool.stagingDir
        println "Copying project website content to ${stagingDir}"
        copy {
            into "${stagingDir}"
            with siteContent(websiteDir)
        }
    }
}